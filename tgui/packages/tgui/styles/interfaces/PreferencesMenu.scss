@use 'sass:color';
@use 'sass:map';
@use '../components/Button.scss';
@use '../colors.scss';

$departments: (
  'Assistant': var(--color-grey),
  'Captain': fg(var(--color-blue)),
  'Cargo': var(--color-brown),
  'Supply': var(--color-brown),
  'Civilian': var(--color-grey),
  'Command': var(--color-yellow),
  'Security': var(--color-red),
  'Engineering': hsl(from var(--color-orange) h s calc(l + 7.5)),
  'Medical': var(--color-teal),
  'Science': fg(var(--color-purple)),
  'Service': var(--color-green),
  'Silicon': var(--color-pink),
);

.ChoicedSelection {
  background-color: var(--color-base);
}

.PreferencesMenu {
  &__Main {
    .Preferences__standard-palette {
      .ColorSelectBox {
        height: 1.35em !important;
        width: 1.35em !important;
      }
      display: inline-block;
      .Button {
        height: 25px !important;
        width: 25px !important;
        line-height: 25px !important;
      }
    }
    font-size: 1.1rem;
  }

  &__Antags {
    &__antagSelection {
      gap: var(--space-l);

      @mixin animate-hover {
        .antagonist-icon-parent .antagonist-icon {
          &:hover {
            transform: scale(1.3);
            transition: transform var(--transition-time-fast) ease-out;
          }
        }
      }

      &__antagonist {

        &__per_character {
          &--off {
            .antagonist-icon-parent-per-character {
              .antagonist-icon {
                border-color: color.adjust(colors.$red, $lightness: -10%);
                &:hover {
                  transition: border-color 0.1s ease-out;
                  border-color: color.adjust(colors.$red, $lightness: -5%);
                }
              }
            }
          }
          &--on {
            .antagonist-icon-parent-per-character {
              .antagonist-icon {
                border-color: color.adjust(colors.$grey, $lightness: -10%);
                &:hover {
                  transition: border-color 0.1s ease-out;
                  border-color: color.adjust(colors.$grey, $lightness: -5%);
                }
              }
            }
          }

          .antagonist-icon-parent-per-character {
            z-index: 1;
            opacity: 0.9;
            overflow: visible;
            position: relative;
            height: 0;
            width: 0;
            padding: 0;
            margin: 0;
            left: 74px;
            bottom: -64px;

            .antagonist-icon {
              border-style: solid;
              border-radius: 50%;
              border-width: 4px;
              background-color: #222;

              box-sizing: content-box;

              height: 32px;
              width: 32px;
              text-align: center;
              font-size: 20px;
              vertical-align: middle;
              line-height: 32px;
              -ms-user-select: none;
              user-select: none;
            }
          }
        }

        .antagonist-icon-parent {
          cursor: var(--cursor-pointer);
          border-style: solid;
          border-radius: var(--border-radius-circular);
          border-width: var(--border-thickness-large);
          box-sizing: content-box;
          overflow: hidden;
          position: relative;

          height: 96px;
          width: 96px;

          .antagonist-icon {
            image-rendering: pixelated;
            border-radius: var(--border-radius-circular);
            overflow: hidden;
            transition: transform var(--transition-time-fast) ease-in;
          }
        }

        &--off {
          @include animate-hover;

          .antagonist-icon-parent {
            border-color: var(--color-red);

            .antagonist-icon {
              opacity: 0.5;

              &:hover {
                opacity: 1;
              }
            }
          }

          &--banned {
            .antagonist-icon-parent {
              border-color: var(--color-grey);
              color: color.adjust(colors.$red, $lightness: 20%);
              .antagonist-icon {
                opacity: 0.5;
              }
            }
          }
        }

        &--on {
          @include animate-hover;

          .antagonist-icon-parent {
            border-color: var(--color-green);
          }

          &--banned {
            .antagonist-icon-parent {
              border-color: var(--color-grey);
              color: color.adjust(colors.$green, $lightness: 40%);
              .antagonist-icon {
                opacity: 0.5;
              }
            }
          }
        }

        &--grey {
          .antagonist-icon-parent {
            border-color: var(--color-grey);
            color: inherit;
            .antagonist-icon {
              opacity: 0.5;
            }
          }
        }

        .antagonist-banned-slash {
          background: colors.$grey;

          width: 100%;
          height: 3px;

          position: absolute;
          top: 50%;
          left: 50%;
          transform: translateY(-50%) translateX(-50%) rotate(35deg);

          opacity: 0.8;
        }

        .antagonist-overlay-text {
          text-align: center;
          text-shadow: 1px 1px 3px 2px #222;
          font-size: 1.2rem;
          z-index: 1;

          .antagonist-overlay-text-hours {
            font-size: 1.5rem;
            font-weight: bold;
          }

          width: 100%;

          position: absolute;
          top: 50%;
          left: 50%;
          transform: translateY(-50%) translateX(-50%);
        }
      }
    }
  }

  &__Jobs {
    > * {
      flex: 1;
    }

    &__departments {
      @each $department-name, $color-value in colors.$departments {
        &--#{$department-name} {
          &.head {
            background: $color-value;

            .job-name {
              font-weight: bold;
            }
          }

          background: colors.fg($color-value);
          border: var(--border-thickness-small) outset colors.fg($color-value);
          color: black;

          > * {
            height: calc(100% + 0.2em);
            padding-bottom: 0.2em;
          }

          .options {
            margin-right: var(--space-xxs);
            background: hsla(0, 0%, 0%, 0.2);
            height: 100%;
          }
        }

        &--Captain {
          &.head {
            .job-name {
              font-size: 1.5em;
            }
          }

          .job-name {
            font-weight: bold;
          }
        }
      }

      &__priority {
        color: black;
        border-left: 1px solid #222;
        border-right: none;
        border-top: none;
        border-bottom: none;
        border-radius: 0 !important;
        text-shadow: 0 0 1px black;
        &--off {
          background-color: color.adjust(colors.$grey, $lightness: 10%) !important;
          border-color: color.adjust(colors.$grey, $lightness: 20%);
          border-left: none;
        }
        &--low {
          background-color: colors.$red !important;
          color: black !important;
          text-shadow: none;
        }
        &--medium {
          background-color: colors.$yellow !important;
          color: black !important;
          text-shadow: none;
        }
        &--high {
          background-color: color.adjust(colors.$green, $lightness: 10%) !important;
          color: black !important;
          text-shadow: none;
        }
        &--disabled {
          background-color: #444 !important;
          color: white !important;
          transition: ease-out 0.25s background-color;
          text-shadow: 0 0 1px black;
          &:hover {
            background-color: #666 !important;
          }
        }
      }
    }

    .job-name {
      font-size: 1.25em;
      padding: 3px;
    }
  }

  &__Quirks {
    &__QuirkList {
      scrollbar-color: var(--color-grey) transparent;
      background-color: var(--color-light-grey);
      height: calc(90vh - 170px);
      min-height: 100%;
      overflow-y: scroll;

      &__quirk {
        cursor: var(--cursor-pointer);
        background-color: var(--color-white);
        border-bottom: var(--border-thickness-tiny) solid var(--color-black);
        color: hsl(0, 0%, 6.7%);
        transition: background-color var(--transition-time-fast) ease-in;

        $quality_map: (
          'positive': var(--color-green),
          'neutral': var(--color-white),
          'negative': var(--color-red),
        );

        @each $quality, $color-value in $quality_map {
          &--#{$quality} {
            background-color: $color-value;
            transition: background-color var(--transition-time-fast) ease-in;
          }
        }

        &:hover {
          background-color: var(--color-grey);
          transition: background-color var(--transition-time-fast) ease-out;

          @each $quality, $color-value in $quality_map {
            .PreferencesMenu__Quirks__QuirkList__quirk--#{$quality} {
              background-color: hsl(from $color-value h s calc(l - 10));
              transition: background-color var(--transition-time-fast) ease-out;
            }
          }
        }
      }
    }
  }
}
